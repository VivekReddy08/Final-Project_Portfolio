# -*- coding: utf-8 -*-
"""Streamlit Code.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ngUXzmXhQ6yMQfM8lSxCc8NGVAtxL-jJ
"""

import streamlit as st
import numpy as np
import joblib
import os

# Load the trained ensemble model
model_path = "ensemble_model.pkl"
if not os.path.exists(model_path):
    st.error("Model file not found. Please ensure 'ensemble_model.pkl' is available in the repository.")
    st.stop()

ensemble_model = joblib.load(model_path)

# Streamlit app
def main():
    st.title("AI-Powered Football Match Outcome Predictor")
    st.header("Input Match Details")

    # User inputs for features
    HomeGoalAvg = st.number_input("Average Goals by Home Team (Last 5 Matches):", min_value=0.0, step=0.1)
    AwayGoalAvg = st.number_input("Average Goals by Away Team (Last 5 Matches):", min_value=0.0, step=0.1)
    HomeWinRate = st.number_input("Home Team Win Rate:", min_value=0.0, max_value=1.0, step=0.01)
    AwayWinRate = st.number_input("Away Team Win Rate:", min_value=0.0, max_value=1.0, step=0.01)

    # Predict outcome
    if st.button("Predict Outcome"):
        input_data = np.array([[HomeGoalAvg, AwayGoalAvg, HomeWinRate, AwayWinRate]])
        prediction = ensemble_model.predict(input_data)[0]
        outcome_map = {0: "Home Win", 1: "Draw", 2: "Away Win"}
        st.subheader("Prediction Result")
        st.write(f"The predicted outcome is: **{outcome_map[prediction]}**")

if __name__ == "__main__":
    main()
